概念
1.同步，异步
 同步就是我给你发信息，就拿着手机等你回消息
 异步就是，我给你发消息，然后我就去打DOTA了，等手机响了再看手机

2、并发，并行
 并行，就是边走边看
 并发，看，走，看，走

3、临界区
 A和B都要打印文档， 办公司只有一台打印机，那就总要有个人等着用打印机。
这里的打印机，就是临界区的概念

4、阻塞和非阻塞
 A占用了打印机，那么其他人就只能等着了。这就是阻塞。
 非阻塞就与之相反，A和B抢着用打印机

5、死锁、饥饿、活锁
 A按着打印机开关，B拿着插头，死锁。
 A总是让别人先 打印。 饥饿
 电梯门口A出，B进，他们总是在同一个方向进出。然后是两个傻逼。就是活锁

并发级别
1、阻塞   synchronized关键字，和重入锁的机制就是阻塞机制
2、无饥饿 所有人都遵守不插队
3、无障碍
所有线程都可以自由进入，临界区。只是在对数据修改的时候。看一把有没有其他线程修改过这个数据，是一种乐观的策略。阻塞就是悲观的策略，认为两个线程冲突的概率高。就让两个线程排队。
4、无锁， 失败重试失败重试失败重试失败重试
5、无等待， 对数据的读不控制，所有的线程读数据都是无等待的。
写数据的时候，会先取得原始数据的副本。修改副本，再找机会写数据


JMM Java内存模型
原子性  同事务概念
可见性  线程A的修改了某个临界区数据，其他线程是否能立即知道这个修改
有序性  指令重排只保证了串行语义一致

哪些指令不能重排
1.程序顺序原则，一个线程内保证语义的一致
2、valatile规则， valatile 变量的写，先发生于读，着保证了volatile 变量的可见性
3、锁规则，解锁必然发生在后面的加锁前
4、线程的start() 先于它的每一个动作
5、线程的所有操作，先于线程的终结
6、线程的中断，先于被中断线程的代码 ？
7、对象的构造函数执行，结束，先于finalize()方法
